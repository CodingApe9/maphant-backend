<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tovelop.maphant.mapper.UserMapper">
    <select id="countSameEmails" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM user
        WHERE email = #{email};
    </select>
    <select id="countSameNickName" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM user
        WHERE nickname = #{nickName};
    </select>
    <select id="countSamePhoneNum" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM user
        WHERE ph_num   = #{phoneNum};
    </select>
    <select id="findUserByEmail" resultType="UserDTO">
        SELECT *
        FROM user
        WHERE email IN  <foreach item="email" collection="emails" open="(" separator="," close=")">
        #{email}
    </foreach> ;
    </select>
    <insert id="insertUser">
        INSERT INTO user (email, password, nickname, name, ph_num , sno , role, created_at, state, agreed_at,
                          lastmodified_at, univ_id)
        VALUES (#{email}, #{password}, #{nickname}, #{name}, #{phNum}, #{sno}, #{role}, NOW(), #{state}, NOW(),
                NOW(), #{univId})
    </insert>
    <update id="updateUser" databaseId="id"
    >
    </update>
    <select id="findEmailBysNo" resultType="String">
        SELECT email
        FROM user
        WHERE ph_num = #{phNum}
          AND sno = #{sno}
    </select>
    <select id="findUniversityIdBy" resultType="int">
        SELECT id
        FROM univ
        WHERE name = #{univName}
    </select>
    <select id="findUniversityUrlBy" resultType="String">
        SELECT link
        FROM univ
        WHERE id = #{univId}
    </select>
    <select id="isUniversityExist" resultType="Boolean">
        SELECT EXISTS(SELECT * FROM univ WHERE id = #{universityId})
    </select>
    <update id="updateUserState">
        UPDATE user
        SET state              = #{state},
            lastmodified_at = NOW()
        WHERE email = #{email}
    </update>
    <update id="updateUserPasswordByEmail">
        UPDATE user
        SET password           = #{password},
            lastmodified_at = NOW()
        WHERE email = #{email}
    </update>
    <update id="updateUserNicknameByEmail">
        UPDATE user
        SET nickname           = #{nickname},
            lastmodified_at = NOW()
        WHERE email = #{email}
    </update>
    <update id="updateUserPhoneNumByEmail">
        UPDATE user
        SET ph_num             = #{phNum},
            lastmodified_at = NOW()
        WHERE email = #{email}
    </update>
    <select id="findPasswordByEmail" resultType="String">
        SELECT password
        FROM user
        WHERE email = #{email}
    </select>
    <select id="findStateByUserId" resultType="Int">
        SELECT state
        FROM user
        WHERE id = #{userId}
    </select>
    <select id="findNicknameByEmail" resultType="String">
        SELECT nickname
        FROM user
        WHERE email = #{email}
    </select>
    <select id="getAllCategories" resultType="String">
        SELECT name
        FROM category
    </select>
    <select id="getAllMajors" resultType="String">
        SELECT name
        FROM major
    </select>
    <select id="getAllUnivNames" resultType="String">
        SELECT name
        FROM univ
    </select>
    <insert id="insertCategoryIdMajorIdByUserId">
        INSERT INTO user_category_major(user_id, category_id, major_id)
        VALUES (#{userId}, #{categoryId}, #{majorId})
    </insert>
    <select id="findUserIdByUserEmail" resultType="Int">
        SELECT id
        FROM user
        WHERE email=#{email}
    </select>
    <select id="findCategoryIdByCategoryName" resultType="Int">
        SELECT id
        FROM category
        WHERE name=#{categoryName}
    </select>
    <select id="findMajorIdByMajorName" resultType="Int">
        SELECT id
        FROM major
        WHERE name=#{majorName}
    </select>

    <select id="findIdBy" resultType="String">
        SELECT nickname
        FROM user
        WHERE id = #{userId}
    </select>
    <update id="updateUserRole">
        update user
        set role = #{role}
        where id = #{id};
    </update>
</mapper>
